# events {

# }


# # The http block includes settings for handling HTTP traffic.
# http {
#     # Specifies the file that defines MIME types for various file extensions.
#     include mime.types;

#     # Sets the default MIME type for files when the type is not determined.
#     default_type application/octet-stream;

#     # Defines a custom log format called 'main' for access logs.
#     log_format main '$remote_addr - $remote_user [$time_local] "$request"'
#                     '$status $body_bytes_sent "$http_referer" '
#                     '"$http_user_agent" "$http_x_forwarded_for"';

#     # Specifies the file and format for access logs.
#     access_log /var/log/nginx/access.log main;

#     # Specifies the file and log level for error logs.
#     error_log /var/log/nginx/error.log warn;

#     # # Enables the use of sendfile for efficient file transfer.
#     # sendfile on;

#     # # Sets the timeout for persistent connections with the client.
#     # keepalive_timeout 65;

#     # Defines an upstream for auth service.
#     upstream auth_service {
#         server 127.0.0.1:8085;
#     }

#     # Defines an upstream for quiz service.
#     upstream quiz_service {
#         server 127.0.0.1:8086;
#     }

#     # The server block defines settings for a virtual server
#     server {
#         # This server listen port 80
#         listen 80;

#         # The server_name directive specifies the domain name for this server
#         server_name 127.0.0.1;

#         # For request to /auth, forward the request to the auth_service upstream
#         location /auth/ {
#             # rewrite ^/auth(/.*) $1 break;
#             proxy_pass  http://auth_service/;

#             # Set various headers to forward to the upstream server
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # For request to /quiz, forward the request to the quiz_service upstream
#         location /quiz/ {
#             # rewrite ^/quiz(/.*) $1 break;
#             proxy_pass http://quiz_service/;

#             # Set various headers to forward to the upstream server
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Return a 404 Not Found status for any requests not matching the above locations. 
#         location / {
#             return 404;
#         }
#     }
# }

upstream auth_service {
    server host.docker.internal:8085;
}

# Defines an upstream for quiz service.
upstream quiz_service {
    server host.docker.internal:8086;
}

server {
    # This server listen port 80
    listen 80;

    # The server_name directive specifies the domain name for this server
    server_name localhost;

    http2 on;

    resolver 8.8.8.8 ipv6=off;

    # For request to /auth, forward the request to the auth_service upstream
    location /auth/ {
        rewrite ^/auth(/.*) $1 break;
        grpc_pass grpc://auth_service;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';

        # Set various headers to forward to the upstream server
        grpc_set_header Upgrade $http_upgrade;
        grpc_set_header Connection keep-alive;
        grpc_set_header Host $host;
        grpc_set_header X-Real-IP $remote_addr;
    }

    # For request to /quiz, forward the request to the quiz_service upstream
    location /quiz/ {
        # rewrite ^/quiz(/.*) $1 break;
        proxy_pass http://quiz_service/;

        # Set various headers to forward to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Return a 404 Not Found status for any requests not matching the above locations. 
    location / {
        return 404;
    }
}