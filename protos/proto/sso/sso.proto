syntax = "proto3";

package auth;

import "google/api/annotations.proto";

option go_package = "sso.v1;ssov1";

// Service for managing auth
service Auth {
    // Register new user
    rpc SignUp (SignUpRequest) returns (SignUpResponse) {
        option (google.api.http) = {
            post: "/v1/sign-up"
            body: "*"
        };
    }

    // Login user and return token
    rpc SignIn (SignInRequest) returns (SignInResponse){
        option (google.api.http) = {
            post: "/v1/sign-in"
            body: "*"
        };
    }

    // IsAdmin checks whether user is admin
    rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse) {
        option (google.api.http) = {
            post: "/v1/is-admin"
            body: "*"
        };
    }

    rpc UserIdentity (UserIdentityRequest) returns (UserIdentityResponse) {
        option (google.api.http) = {
            post: "/v1/user-identity"
            body: "*"
        };
    }
}

// TODO: На будущее
// service Permissions {
//     rpc GetUserPermissions(GetUserPermissionsRequest) returns (UserPermissions);
// }

message SignUpRequest {
    string name = 1;
    string email = 2;
    string username = 3;
    string password = 4;
}

message SignUpResponse {
    string userID = 1; // User id of the registered user
}

message SignInRequest {
    string username = 1;
    string password = 2;
}

message SignInResponse {
    string accessToken = 1; // Auth token of the logged user
}

message IsAdminRequest {
    string userID = 1;
}

message IsAdminResponse {
    bool is_admin = 1;
}

message UserIdentityRequest {
    string accessToken = 1;
}

message UserIdentityResponse {
    bool auth = 1;
    string userID = 2;
}